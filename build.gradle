

/***
 * arc42 - quality requirements examples - gradle build script
 =============================================================
 *
 * This is free software without any guarantees. Use at your own risk.
 *
 * See licence.txt for details.
 *
 *
 * Credits:
 *   Peter Niederwieser, for instructions on how to:
 *   - call shell commands from gradle:
 *     http://forums.gradle.org/gradle/topics/how_to_execute_shell_command_source_or_dot_doestnt_work_with_exec
***************************************************************/


project.description = "arc42 - Examples for Software Quality Requirements"
project.version = "0.7.5"


buildscript {
    repositories {
      jcenter()

    }

    dependencies {
      classpath ( 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.2')

  }

}


apply plugin: 'org.asciidoctor.convert'

ext {
    srcDir  = "$projectDir/src/asciidoc"
    targetDir = "$buildDir"
}


asciidoctor {
  outputDir = file( targetDir )
  sourceDir = file("$srcDir")
  println "outputDir = " + outputDir
  println "sourceDir = " + sourceDir

  separateOutputDirs = false

    sources  { include "index.adoc" }

    backends = ['html5', 'docbook']

    attributes = [
            doctype: 'book',
            icons: 'font',
            toc: 'left',
            sectlink: true,
            sectanchors: true,
            numbered: true,
            version: project.version
    ]


} // asciidoctor



task generateDocx( dependsOn: 'asciidoctor', type: Exec) {
      description =
"""
Executing shell commands does currently NOT work from within
the IntelliJ JetGradle environment.
"""
    executable "sh"

// calling pandoc over sh directly from gradle does not produce any output,
// therefore I delegated docx creation to a shell script.

    args "create_docx_with_pandoc.sh"

}

defaultTasks 'generateDocx'
